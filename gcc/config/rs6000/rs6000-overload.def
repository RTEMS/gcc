; Overloaded built-in functions for PowerPC.
; Copyright (C) 2020 Free Software Foundation, Inc.
; Contributed by Bill Schmidt, IBM <wschmidt@linux.ibm.com>
;
; This file is part of GCC.
;
; GCC is free software; you can redistribute it and/or modify it under
; the terms of the GNU General Public License as published by the Free
; Software Foundation; either version 3, or (at your option) any later
; version.
;
; GCC is distributed in the hope that it will be useful, but WITHOUT ANY
; WARRANTY; without even the implied warranty of MERCHANTABILITY or
; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
; for more details.
;
; You should have received a copy of the GNU General Public License
; along with GCC; see the file COPYING3.  If not see
; <http://www.gnu.org/licenses/>.  */


; Overloaded built-in functions in this file are organized into "stanzas",
; where all built-ins in a given stanza have the same overloaded function
; name:
;
;   [<overload-id>, <abi-name>, <builtin-name>]
;
; Here the square brackets are part of the syntax, <overload-id> is a
; unique internal identifier for the overload that will be used as part
; of an enumeration of all overloaded functions; <abi-name> is the name
; that will appear as a #define in altivec.h; and <builtin-name> is the
; name that is overloaded in the back end.  If no #define is desired,
; the <abi-name> should be replaced with the token SKIP.
;
; Each function entry has two lines.  The first line is a prototype line.
; See rs6000-builtin-new.def for a description of the prototype line.
; A prototype line in the file differs in that it doesn't have an
; optional [kind] token:
;
;   <return-type> <internal-name> (<argument-list>);
;
; The second line contains the <bif-id> that this particular instance of
; the overloaded function maps to.  It must match a token that appears in
; rs6000-builtin-new.def.  Optionally, a second token may appear.  If only
; one token is on the line, it is also used to build the unique identifier
; for the overloaded function.  If a second token is present, the second
; token is used instead for this purpose.  This is necessary in cases
; where a built-in function accepts more than one type signature.  For
; example, opaque vector types accept any vector type.  It is also common
; to have a built-in function that, for example, specifies a "vector
; signed char" argument, but accepts "vector unsigned char" and "vector
; bool char" as well because only the mode matters.  Note that the
; overload resolution mechanism has always handled these cases by
; performing fold_convert on vector arguments to hide type mismatches,
; and it will continue to do so.
;
; As a concrete example, __builtin_altivec_mtvscr uses an opaque argument
; type for the source operand.  Its built-in function id is MTVSCR.  The
; overloaded function __builtin_vec_mtvscr takes a variety of specific
; types, but not all vector types.  Each of these maps to the same
; __builtin_altivec_mtvscr built-in function, but the overload ID must
; be unique, so we must specify the second token as shown here.
;
;[VEC_MTVSCR, vec_mtvscr, __builtin_vec_mtvscr]
;  void __builtin_vec_mtvscr (vbc);
;    MTVSCR  MTVSCR_VBC
;  void __builtin_vec_mtvscr (vsc);
;    MTVSCR  MTVSCR_VSC
;  ...
;
; Blank lines may be used as desired in this file between the lines as
; defined above; that is, you can introduce as many extra newlines as you
; like after a required newline, but nowhere else.  Lines beginning with
; a semicolon are also treated as blank lines.


[VEC_ABS, vec_abs, __builtin_vec_abs]
  vsc __builtin_vec_abs (vsc);
    ABS_V16QI
  vss __builtin_vec_abs (vss);
    ABS_V8HI
  vsi __builtin_vec_abs (vsi);
    ABS_V4SI
  vsll __builtin_vec_abs (vsll);
    ABS_V2DI
  vf __builtin_vec_abs (vf);
    ABS_V4SF
  vd __builtin_vec_abs (vd);
    XVABSDP

[VEC_ABSS, vec_abss, __builtin_vec_abss]
  vsc __builtin_vec_abss (vsc);
    ABSS_V16QI
  vss __builtin_vec_abss (vss);
    ABSS_V8HI
  vsi __builtin_vec_abss (vsi);
    ABSS_V4SI

[VEC_ADD, vec_add, __builtin_vec_add]
  vsc __builtin_vec_add (vsc, vsc);
    VADDUBM  VADDUBM_VSC
  vuc __builtin_vec_add (vuc, vuc);
    VADDUBM  VADDUBM_VUC
  vss __builtin_vec_add (vss, vss);
    VADDUHM  VADDUHM_VSS
  vus __builtin_vec_add (vus, vus);
    VADDUHM  VADDUHM_VUS
  vsi __builtin_vec_add (vsi, vsi);
    VADDUWM  VADDUWM_VSI
  vui __builtin_vec_add (vui, vui);
    VADDUWM  VADDUWM_VUI
  vsll __builtin_vec_add (vsll, vsll);
    VADDUDM  VADDUDM_VSLL
  vull __builtin_vec_add (vull, vull);
    VADDUDM  VADDUDM_VULL
  vsq __builtin_vec_add (vsq, vsq);
    VADDUQM  VADDUQM_VSQ
  vuq __builtin_vec_add (vuq, vuq);
    VADDUQM  VADDUQM_VUQ
  vf __builtin_vec_add (vf, vf);
    XVADDSP
  vd __builtin_vec_add (vd, vd);
    XVADDDP

[VEC_ADDC, vec_addc, __builtin_vec_addc]
  vsi __builtin_vec_addc (vsi, vsi);
    VADDCUW  VADDCUW_VSI
  vui __builtin_vec_addc (vui, vui);
    VADDCUW  VADDCUW_VUI
  vsq __builtin_vec_addc (vsq, vsq);
    VADDCUQ  VADDCUQ_VSQ
  vuq __builtin_vec_addc (vuq, vuq);
    VADDCUQ  VADDCUQ_VUQ

; TODO: Note that the entry for VEC_ADDEC currently gets ignored in
; altivec_resolve_overloaded_builtin.  There are also forms for
; vsi and vui arguments, but rather than building a define_expand
; for the instruction sequence generated for those, we do some RTL
; hackery.  Revisit whether we can remove that.  For now, keep this
; much of the entry here to generate the #define, at least.
[VEC_ADDEC, vec_addec, __builtin_vec_addec]
  vsq __builtin_vec_addec (vsq, vsq, vsq);
    VADDECUQ  VADDECUQ_VSQ
  vuq __builtin_vec_addec (vuq, vuq, vuq);
    VADDECUQ  VADDECUQ_VUQ

[VEC_ADDS, vec_adds, __builtin_vec_adds]
  vuc __builtin_vec_adds (vuc, vuc);
    VADDUBS
  vsc __builtin_vec_adds (vsc, vsc);
    VADDSBS
  vus __builtin_vec_adds (vus, vus);
    VADDUHS
  vss __builtin_vec_adds (vss, vss);
    VADDSHS
  vui __builtin_vec_adds (vui, vui);
    VADDUWS
  vsi __builtin_vec_adds (vsi, vsi);
    VADDSWS

[VEC_ANDC, vec_andc, __builtin_vec_andc]
  vbc __builtin_vec_andc (vbc, vbc);
    VANDC_V16QI_UNS VANDC_VBC
  vsc __builtin_vec_andc (vsc, vsc);
    VANDC_V16QI
  vuc __builtin_vec_andc (vuc, vuc);
    VANDC_V16QI_UNS VANDC_VUC
  vbs __builtin_vec_andc (vbs, vbs);
    VANDC_V8HI_UNS VANDC_VBS
  vss __builtin_vec_andc (vss, vss);
    VANDC_V8HI
  vus __builtin_vec_andc (vus, vus);
    VANDC_V8HI_UNS VANDC_VUS
  vbi __builtin_vec_andc (vbi, vbi);
    VANDC_V4SI_UNS VANDC_VBI
  vsi __builtin_vec_andc (vsi, vsi);
    VANDC_V4SI
  vui __builtin_vec_andc (vui, vui);
    VANDC_V4SI_UNS VANDC_VUI
  vbll __builtin_vec_andc (vbll, vbll);
    VANDC_V4SI_UNS VANDC_VBLL
  vsll __builtin_vec_andc (vsll, vsll);
    VANDC_V2DI
  vull __builtin_vec_andc (vull, vull);
    VANDC_V2DI_UNS VANDC_VULL
  vf __builtin_vec_andc (vf, vf);
    VANDC_V4SF
  vd __builtin_vec_andc (vd, vd);
    VANDC_V2DF

[VEC_AVG, vec_avg, __builtin_vec_avg]
  vsc __builtin_vec_avg (vsc, vsc);
    VAVGSB
  vuc __builtin_vec_avg (vuc, vuc);
    VAVGUB
  vss __builtin_vec_avg (vss, vss);
    VAVGSH
  vus __builtin_vec_avg (vus, vus);
    VAVGUH
  vsi __builtin_vec_avg (vsi, vsi);
    VAVGSW
  vui __builtin_vec_avg (vui, vui);
    VAVGUW

[VEC_CEIL, vec_ceil, __builtin_vec_ceil]
  vf __builtin_vec_ceil (vf);
    XVRSPIP
  vd __builtin_vec_ceil (vd);
    XVRDPIP

[VEC_CMPB, vec_cmpb, __builtin_vec_cmpb]
  vsi __builtin_vec_cmpb (vf, vf);
    VCMPBFP

[VEC_CMPEQ, vec_cmpeq, __builtin_vec_cmpeq]
  vbc __builtin_vec_cmpeq (vsc, vsc);
    VCMPEQUB  VCMPEQUB_VSC
  vbc __builtin_vec_cmpeq (vuc, vuc);
    VCMPEQUB  VCMPEQUB_VUC
  vbc __builtin_vec_cmpeq (vbc, vbc);
    VCMPEQUB  VCMPEQUB_VBC
  vbs __builtin_vec_cmpeq (vss, vss);
    VCMPEQUH  VCMPEQUH_VSS
  vbs __builtin_vec_cmpeq (vus, vus);
    VCMPEQUH  VCMPEQUH_VUS
  vbs __builtin_vec_cmpeq (vbs, vbs);
    VCMPEQUH  VCMPEQUH_VBS
  vbi __builtin_vec_cmpeq (vsi, vsi);
    VCMPEQUW  VCMPEQUW_VSI
  vbi __builtin_vec_cmpeq (vui, vui);
    VCMPEQUW  VCMPEQUW_VUI
  vbi __builtin_vec_cmpeq (vbi, vbi);
    VCMPEQUW  VCMPEQUW_VBI
  vbll __builtin_vec_cmpeq (vsll, vsll);
    VCMPEQUD  VCMPEQUD_VSLL
  vbll __builtin_vec_cmpeq (vull, vull);
    VCMPEQUD  VCMPEQUD_VULL
  vbll __builtin_vec_cmpeq (vbll, vbll);
    VCMPEQUD  VCMPEQUD_VBLL
  vbi __builtin_vec_cmpeq (vf, vf);
    XVCMPEQSP
  vbll __builtin_vec_cmpeq (vd, vd);
    XVCMPEQDP

[VEC_CMPGE, vec_cmpge, __builtin_vec_cmpge]
  vbc __builtin_vec_cmpge (vsc, vsc);
    CMPGE_16QI  CMPGE_16QI_VSC
  vbc __builtin_vec_cmpge (vuc, vuc);
    CMPGE_16QI  CMPGE_16QI_VUC
  vbs __builtin_vec_cmpge (vss, vss);
    CMPGE_8HI  CMPGE_8HI_VSS
  vbs __builtin_vec_cmpge (vus, vus);
    CMPGE_8HI  CMPGE_8HI_VUS
  vbi __builtin_vec_cmpge (vsi, vsi);
    CMPGE_4SI  CMPGE_4SI_VSI
  vbi __builtin_vec_cmpge (vui, vui);
    CMPGE_4SI  CMPGE_4SI_VUI
  vbll __builtin_vec_cmpge (vsll, vsll);
    CMPGE_2DI  CMPGE_2DI_VSLL
  vbll __builtin_vec_cmpge (vull, vull);
    CMPGE_2DI  CMPGE_2DI_VULL
  vbi __builtin_vec_cmpge (vf, vf);
    XVCMPGESP
  vbll __builtin_vec_cmpge (vd, vd);
    XVCMPGEDP

[VEC_CMPGT, vec_cmpgt, __builtin_vec_cmpgt]
  vbc __builtin_vec_cmpgt (vsc, vsc);
    VCMPGTSB
  vbc __builtin_vec_cmpgt (vuc, vuc);
    VCMPGTUB
  vbs __builtin_vec_cmpgt (vss, vss);
    VCMPGTSH
  vbs __builtin_vec_cmpgt (vus, vus);
    VCMPGTUH
  vbi __builtin_vec_cmpgt (vsi, vsi);
    VCMPGTSW
  vbi __builtin_vec_cmpgt (vui, vui);
    VCMPGTUW
  vbll __builtin_vec_cmpgt (vsll, vsll);
    VCMPGTSD
  vbll __builtin_vec_cmpgt (vull, vull);
    VCMPGTUD
  vbi __builtin_vec_cmpgt (vf, vf);
    XVCMPGTSP
  vbll __builtin_vec_cmpgt (vd, vd);
    XVCMPGTDP

; Note that there is no entry for VEC_CMPLE.  VEC_CMPLE is implemented
; using VEC_CMPGE with reversed arguments in altivec.h.

; Note that there is no entry for VEC_CMPLT.  VEC_CMPLT is implemented
; using VEC_CMPGT with reversed arguments in altivec.h.

[VEC_CONVERT_4F32_8I16, SKIP, __builtin_vec_convert_4f32_8i16]
  vus __builtin_vec_convert_4f32_8i16 (vf, vf);
    CONVERT_4F32_8I16

[VEC_CONVERT_4F32_8F16, SKIP, __builtin_vec_convert_4f32_8f16]
  vus __builtin_vec_convert_4f32_8f16 (vf, vf);
    CONVERT_4F32_8F16

[VEC_COPYSIGN, vec_cpsgn, __builtin_vec_copysign]
  vf __builtin_vec_copysign (vf, vf);
    CPSGNSP
  vd __builtin_vec_copysign (vd, vd);
    CPSGNDP

[VEC_CTF, vec_ctf, __builtin_vec_ctf]
  vf __builtin_vec_ctf (vsi, const int);
    VCFSX
  vf __builtin_vec_ctf (vui, const int);
    VCFUX
  vd __builtin_vec_ctf (vsll, const int);
    XVCVSXDDP_SCALE
  vd __builtin_vec_ctf (vull, const int);
    XVCVUXDDP_SCALE

[VEC_CTS, vec_cts, __builtin_vec_cts]
  vsi __builtin_vec_cts (vf, const int);
    VCTSXS
  vsll __builtin_vec_cts (vd, const int);
    XVCVDPSXDS_SCALE

[VEC_CTU, vec_ctu, __builtin_vec_ctu]
  vui __builtin_vec_ctu (vf, const int);
    VCTUXS
  vull __builtin_vec_ctu (vd, const int);
    XVCVDPUXDS_SCALE

[VEC_DIV, vec_div, __builtin_vec_div]
  vsll __builtin_vec_div (vsll, vsll);
    DIV_V2DI
  vull __builtin_vec_div (vull, vull);
    UDIV_V2DI
  vf __builtin_vec_div (vf, vf);
    XVDIVSP
  vd __builtin_vec_div (vd, vd);
    XVDIVDP

[VEC_DOUBLE, vec_double, __builtin_vec_double]
  vd __builtin_vec_double (vsll);
    XVCVSXDDP
  vd __builtin_vec_double (vull);
    XVCVUXDDP

[VEC_DOUBLEE, vec_doublee, __builtin_vec_doublee]
  vd __builtin_vec_doublee (vsi);
    DOUBLEE_V4SI
  vd __builtin_vec_doublee (vui);
    UNS_DOUBLEE_V4SI
  vd __builtin_vec_doublee (vf);
    DOUBLEE_V4SF

[VEC_DOUBLEH, vec_doubleh, __builtin_vec_doubleh]
  vd __builtin_vec_doubleh (vsi);
    DOUBLEH_V4SI
  vd __builtin_vec_doubleh (vui);
    UNS_DOUBLEH_V4SI
  vd __builtin_vec_doubleh (vf);
    DOUBLEH_V4SF

[VEC_DOUBLEL, vec_doublel, __builtin_vec_doublel]
  vd __builtin_vec_doublel (vsi);
    DOUBLEL_V4SI
  vd __builtin_vec_doublel (vui);
    UNS_DOUBLEL_V4SI
  vd __builtin_vec_doublel (vf);
    DOUBLEL_V4SF

[VEC_DOUBLEO, vec_doubleo, __builtin_vec_doubleo]
  vd __builtin_vec_doubleo (vsi);
    DOUBLEO_V4SI
  vd __builtin_vec_doubleo (vui);
    UNS_DOUBLEO_V4SI
  vd __builtin_vec_doubleo (vf);
    DOUBLEO_V4SF

[VEC_EXPTE, vec_expte, __builtin_vec_expte]
  vf __builtin_vec_expte (vf);
    VEXPTEFP

[VEC_FIRSTMATCHINDEX, vec_first_match_index, __builtin_vec_first_match_index]
  unsigned int __builtin_vec_first_match_index (vsc, vsc);
    VFIRSTMATCHINDEX_V16QI FIRSTMATCHINDEX_VSC
  unsigned int __builtin_vec_first_match_index (vuc, vuc);
    VFIRSTMATCHINDEX_V16QI FIRSTMATCHINDEX_VUC
  unsigned int __builtin_vec_first_match_index (vss, vss);
    VFIRSTMATCHINDEX_V8HI FIRSTMATCHINDEX_VSS
  unsigned int __builtin_vec_first_match_index (vus, vus);
    VFIRSTMATCHINDEX_V8HI FIRSTMATCHINDEX_VUS
  unsigned int __builtin_vec_first_match_index (vsi, vsi);
    VFIRSTMATCHINDEX_V4SI FIRSTMATCHINDEX_VSI
  unsigned int __builtin_vec_first_match_index (vui, vui);
    VFIRSTMATCHINDEX_V4SI FIRSTMATCHINDEX_VUI

[VEC_FIRSTMATCHOREOSINDEX, vec_first_match_or_eos_index, __builtin_vec_first_match_or_eos_index]
  unsigned int __builtin_vec_first_match_or_eos_index (vsc, vsc);
    VFIRSTMATCHOREOSINDEX_V16QI FIRSTMATCHOREOSINDEX_VSC
  unsigned int __builtin_vec_first_match_or_eos_index (vuc, vuc);
    VFIRSTMATCHOREOSINDEX_V16QI FIRSTMATCHOREOSINDEX_VUC
  unsigned int __builtin_vec_first_match_or_eos_index (vss, vss);
    VFIRSTMATCHOREOSINDEX_V8HI FIRSTMATCHOREOSINDEX_VSS
  unsigned int __builtin_vec_first_match_or_eos_index (vus, vus);
    VFIRSTMATCHOREOSINDEX_V8HI FIRSTMATCHOREOSINDEX_VUS
  unsigned int __builtin_vec_first_match_or_eos_index (vsi, vsi);
    VFIRSTMATCHOREOSINDEX_V4SI FIRSTMATCHOREOSINDEX_VSI
  unsigned int __builtin_vec_first_match_or_eos_index (vui, vui);
    VFIRSTMATCHOREOSINDEX_V4SI FIRSTMATCHOREOSINDEX_VUI

[VEC_FIRSTMISMATCHINDEX, vec_first_mismatch_index, __builtin_vec_first_mismatch_index]
  unsigned int __builtin_vec_first_mismatch_index (vsc, vsc);
    VFIRSTMISMATCHINDEX_V16QI FIRSTMISMATCHINDEX_VSC
  unsigned int __builtin_vec_first_mismatch_index (vuc, vuc);
    VFIRSTMISMATCHINDEX_V16QI FIRSTMISMATCHINDEX_VUC
  unsigned int __builtin_vec_first_mismatch_index (vss, vss);
    VFIRSTMISMATCHINDEX_V8HI FIRSTMISMATCHINDEX_VSS
  unsigned int __builtin_vec_first_mismatch_index (vus, vus);
    VFIRSTMISMATCHINDEX_V8HI FIRSTMISMATCHINDEX_VUS
  unsigned int __builtin_vec_first_mismatch_index (vsi, vsi);
    VFIRSTMISMATCHINDEX_V4SI FIRSTMISMATCHINDEX_VSI
  unsigned int __builtin_vec_first_mismatch_index (vui, vui);
    VFIRSTMISMATCHINDEX_V4SI FIRSTMISMATCHINDEX_VUI

[VEC_FIRSTMISMATCHOREOSINDEX, vec_first_mismatch_or_eos_index, __builtin_vec_first_mismatch_or_eos_index]
  unsigned int __builtin_vec_first_mismatch_or_eos_index (vsc, vsc);
    VFIRSTMISMATCHOREOSINDEX_V16QI FIRSTMISMATCHOREOSINDEX_VSC
  unsigned int __builtin_vec_first_mismatch_or_eos_index (vuc, vuc);
    VFIRSTMISMATCHOREOSINDEX_V16QI FIRSTMISMATCHOREOSINDEX_VUC
  unsigned int __builtin_vec_first_mismatch_or_eos_index (vss, vss);
    VFIRSTMISMATCHOREOSINDEX_V8HI FIRSTMISMATCHOREOSINDEX_VSS
  unsigned int __builtin_vec_first_mismatch_or_eos_index (vus, vus);
    VFIRSTMISMATCHOREOSINDEX_V8HI FIRSTMISMATCHOREOSINDEX_VUS
  unsigned int __builtin_vec_first_mismatch_or_eos_index (vsi, vsi);
    VFIRSTMISMATCHOREOSINDEX_V4SI FIRSTMISMATCHOREOSINDEX_VSI
  unsigned int __builtin_vec_first_mismatch_or_eos_index (vui, vui);
    VFIRSTMISMATCHOREOSINDEX_V4SI FIRSTMISMATCHOREOSINDEX_VUI

[VEC_FLOAT, vec_float, __builtin_vec_float]
  vf __builtin_vec_float (vsi);
    XVCVSXWSP_V4SF
  vf __builtin_vec_float (vui);
    XVCVUXWSP_V4SF

[VEC_FLOAT2, vec_float2, __builtin_vec_float2]
  vf __builtin_vec_float2 (vsll, vsll);
    FLOAT2_V2DI
  vf __builtin_vec_float2 (vull, vull);
    UNS_FLOAT2_V2DI
  vf __builtin_vec_float2 (vd, vd);
    FLOAT2_V2DF

[VEC_FLOATE, vec_floate, __builtin_vec_floate]
  vf __builtin_vec_floate (vsll);
    FLOATE_V2DI
  vf __builtin_vec_floate (vull);
    UNS_FLOATE_V2DI
  vf __builtin_vec_floate (vd);
    FLOATE_V2DF

[VEC_FLOATO, vec_floato, __builtin_vec_floato]
  vf __builtin_vec_floato (vsll);
    FLOATO_V2DI
  vf __builtin_vec_floato (vull);
    UNS_FLOATO_V2DI
  vf __builtin_vec_floato (vd);
    FLOATO_V2DF

[VEC_FLOOR, vec_floor, __builtin_vec_floor]
  vf __builtin_vec_floor (vf);
    XVRSPIM
  vd __builtin_vec_floor (vd);
    XVRDPIM

[VEC_LD, vec_ld, __builtin_vec_ld]
  vsc __builtin_vec_ld (signed long long, vsc *);
    LVX_V16QI  LVX_V16QI_VSC
  vsc __builtin_vec_ld (signed long long, signed char *);
    LVX_V16QI  LVX_V16QI_SC
  vuc __builtin_vec_ld (signed long long, vuc *);
    LVX_V16QI  LVX_V16QI_VUC
  vuc __builtin_vec_ld (signed long long, unsigned char *);
    LVX_V16QI  LVX_V16QI_UC
  vbc __builtin_vec_ld (signed long long, vbc *);
    LVX_V16QI  LVX_V16QI_VBC
  vss __builtin_vec_ld (signed long long, vss *);
    LVX_V8HI  LVX_V8HI_VSS
  vss __builtin_vec_ld (signed long long, signed short *);
    LVX_V8HI  LVX_V8HI_SS
  vus __builtin_vec_ld (signed long long, vus *);
    LVX_V8HI  LVX_V8HI_VUS
  vus __builtin_vec_ld (signed long long, unsigned short *);
    LVX_V8HI  LVX_V8HI_US
  vbs __builtin_vec_ld (signed long long, vbs *);
    LVX_V8HI  LVX_V8HI_VBS
  vp __builtin_vec_ld (signed long long, vp *);
    LVX_V8HI  LVX_V8HI_VP
  vsi __builtin_vec_ld (signed long long, vsi *);
    LVX_V4SI  LVX_V4SI_VSI
  vsi __builtin_vec_ld (signed long long, signed int *);
    LVX_V4SI  LVX_V4SI_SI
  vui __builtin_vec_ld (signed long long, vui *);
    LVX_V4SI  LVX_V4SI_VUI
  vui __builtin_vec_ld (signed long long, unsigned int *);
    LVX_V4SI  LVX_V4SI_UI
  vbi __builtin_vec_ld (signed long long, vbi *);
    LVX_V4SI  LVX_V4SI_VBI
  vsll __builtin_vec_ld (signed long long, vsll *);
    LVX_V2DI  LVX_V2DI_VSLL
  vsll __builtin_vec_ld (signed long long, signed long long *);
    LVX_V2DI  LVX_V2DI_SLL
  vull __builtin_vec_ld (signed long long, vull *);
    LVX_V2DI  LVX_V2DI_VULL
  vull __builtin_vec_ld (signed long long, unsigned long long *);
    LVX_V2DI  LVX_V2DI_ULL
  vbll __builtin_vec_ld (signed long long, vbll *);
    LVX_V2DI  LVX_V2DI_VBLL
  vsq __builtin_vec_ld (signed long long, const vsq *);
    LVX_V1TI  LVX_V1TI_VSQ
  vuq __builtin_vec_ld (signed long long, const vuq *);
    LVX_V1TI  LVX_V1TI_VUQ
  vsq __builtin_vec_ld (signed long long, __int128 *);
    LVX_V1TI  LVX_V1TI_TI
  vuq __builtin_vec_ld (signed long long, unsigned __int128 *);
    LVX_V1TI  LVX_V1TI_UTI
  vf __builtin_vec_ld (signed long long, vf *);
    LVX_V4SF  LVX_V4SF_VF
  vf __builtin_vec_ld (signed long long, float *);
    LVX_V4SF  LVX_V4SF_F
  vd __builtin_vec_ld (signed long long, vd *);
    LVX_V2DF  LVX_V2DF_VD
  vd __builtin_vec_ld (signed long long, double *);
    LVX_V2DF  LVX_V2DF_D

[VEC_LDE, vec_lde, __builtin_vec_lde]
  vsc __builtin_vec_lde (signed long long, signed char *);
    LVEBX  LVEBX_SC
  vuc __builtin_vec_lde (signed long long, unsigned char *);
    LVEBX  LVEBX_UC
  vss __builtin_vec_lde (signed long long, signed short *);
    LVEHX  LVEHX_SS
  vus __builtin_vec_lde (signed long long, unsigned short *);
    LVEHX  LVEHX_US
  vsi __builtin_vec_lde (signed long long, signed int *);
    LVEWX  LVEWX_SI
  vui __builtin_vec_lde (signed long long, unsigned int *);
    LVEWX  LVEWX_UI
  vf __builtin_vec_lde (signed long long, float *);
    LVEWX  LVEWX_F

[VEC_LDL, vec_ldl, __builtin_vec_ldl]
  vsc __builtin_vec_ldl (signed long long, vsc *);
    LVXL_V16QI  LVXL_V16QI_VSC
  vsc __builtin_vec_ldl (signed long long, signed char *);
    LVXL_V16QI  LVXL_V16QI_SC
  vuc __builtin_vec_ldl (signed long long, vuc *);
    LVXL_V16QI  LVXL_V16QI_VUC
  vuc __builtin_vec_ldl (signed long long, unsigned char *);
    LVXL_V16QI  LVXL_V16QI_UC
  vbc __builtin_vec_ldl (signed long long, vbc *);
    LVXL_V16QI  LVXL_V16QI_VBC
  vss __builtin_vec_ldl (signed long long, vss *);
    LVXL_V8HI  LVXL_V8HI_VSS
  vss __builtin_vec_ldl (signed long long, signed short *);
    LVXL_V8HI  LVXL_V8HI_SS
  vus __builtin_vec_ldl (signed long long, vus *);
    LVXL_V8HI  LVXL_V8HI_VUS
  vus __builtin_vec_ldl (signed long long, unsigned short *);
    LVXL_V8HI  LVXL_V8HI_US
  vbs __builtin_vec_ldl (signed long long, vbs *);
    LVXL_V8HI  LVXL_V8HI_VBS
  vp __builtin_vec_ldl (signed long long, vp *);
    LVXL_V8HI  LVXL_V8HI_VP
  vsi __builtin_vec_ldl (signed long long, vsi *);
    LVXL_V4SI  LVXL_V4SI_VSI
  vsi __builtin_vec_ldl (signed long long, signed int *);
    LVXL_V4SI  LVXL_V4SI_SI
  vui __builtin_vec_ldl (signed long long, vui *);
    LVXL_V4SI  LVXL_V4SI_VUI
  vui __builtin_vec_ldl (signed long long, unsigned int *);
    LVXL_V4SI  LVXL_V4SI_UI
  vbi __builtin_vec_ldl (signed long long, vbi *);
    LVXL_V4SI  LVXL_V4SI_VBI
  vsll __builtin_vec_ldl (signed long long, vsll *);
    LVXL_V2DI  LVXL_V2DI_VSLL
  vsll __builtin_vec_ldl (signed long long, signed long long *);
    LVXL_V2DI  LVXL_V2DI_SLL
  vull __builtin_vec_ldl (signed long long, vull *);
    LVXL_V2DI  LVXL_V2DI_VULL
  vull __builtin_vec_ldl (signed long long, unsigned long long *);
    LVXL_V2DI  LVXL_V2DI_ULL
  vbll __builtin_vec_ldl (signed long long, vbll *);
    LVXL_V2DI  LVXL_V2DI_VBLL
  vsq __builtin_vec_ldl (signed long long, const vsq *);
    LVXL_V1TI  LVXL_V1TI_VSQ
  vuq __builtin_vec_ldl (signed long long, const vuq *);
    LVXL_V1TI  LVXL_V1TI_VUQ
  vsq __builtin_vec_ldl (signed long long, __int128 *);
    LVXL_V1TI  LVXL_V1TI_TI
  vuq __builtin_vec_ldl (signed long long, unsigned __int128 *);
    LVXL_V1TI  LVXL_V1TI_UTI
  vf __builtin_vec_ldl (signed long long, vf *);
    LVXL_V4SF  LVXL_V4SF_VF
  vf __builtin_vec_ldl (signed long long, float *);
    LVXL_V4SF  LVXL_V4SF_F
  vd __builtin_vec_ldl (signed long long, vd *);
    LVXL_V2DF  LVXL_V2DF_VD
  vd __builtin_vec_ldl (signed long long, double *);
    LVXL_V2DF  LVXL_V2DF_D

[VEC_LOGE, vec_loge, __builtin_vec_loge]
  vf __builtin_vec_loge (vf);
    VLOGEFP

[VEC_LVLX, vec_lvlx, __builtin_vec_lvlx]
  vbc __builtin_vec_lvlx (signed long long, vbc *);
    LVLX  LVLX_VBC
  vsc __builtin_vec_lvlx (signed long long, vsc *);
    LVLX  LVLX_VSC
  vsc __builtin_vec_lvlx (signed long long, signed char *);
    LVLX  LVLX_SC
  vuc __builtin_vec_lvlx (signed long long, vuc *);
    LVLX  LVLX_VUC
  vuc __builtin_vec_lvlx (signed long long, unsigned char *);
    LVLX  LVLX_UC
  vbs __builtin_vec_lvlx (signed long long, vbs *);
    LVLX  LVLX_VBS
  vss __builtin_vec_lvlx (signed long long, vss *);
    LVLX  LVLX_VSS
  vss __builtin_vec_lvlx (signed long long, signed short *);
    LVLX  LVLX_SS
  vus __builtin_vec_lvlx (signed long long, vus *);
    LVLX  LVLX_VUS
  vus __builtin_vec_lvlx (signed long long, unsigned short *);
    LVLX  LVLX_US
  vp __builtin_vec_lvlx (signed long long, vp *);
    LVLX  LVLX_VP
  vbi __builtin_vec_lvlx (signed long long, vbi *);
    LVLX  LVLX_VBI
  vsi __builtin_vec_lvlx (signed long long, vsi *);
    LVLX  LVLX_VSI
  vsi __builtin_vec_lvlx (signed long long, signed int *);
    LVLX  LVLX_SI
  vui __builtin_vec_lvlx (signed long long, vui *);
    LVLX  LVLX_VUI
  vui __builtin_vec_lvlx (signed long long, unsigned int *);
    LVLX  LVLX_UI
  vf __builtin_vec_lvlx (signed long long, vf *);
    LVLX  LVLX_VF
  vf __builtin_vec_lvlx (signed long long, float *);
    LVLX  LVLX_F

[VEC_LVLXL, vec_lvlxl, __builtin_vec_lvlxl]
  vbc __builtin_vec_lvlxl (signed long long, vbc *);
    LVLXL  LVLXL_VBC
  vsc __builtin_vec_lvlxl (signed long long, vsc *);
    LVLXL  LVLXL_VSC
  vsc __builtin_vec_lvlxl (signed long long, signed char *);
    LVLXL  LVLXL_SC
  vuc __builtin_vec_lvlxl (signed long long, vuc *);
    LVLXL  LVLXL_VUC
  vuc __builtin_vec_lvlxl (signed long long, unsigned char *);
    LVLXL  LVLXL_UC
  vbs __builtin_vec_lvlxl (signed long long, vbs *);
    LVLXL  LVLXL_VBS
  vss __builtin_vec_lvlxl (signed long long, vss *);
    LVLXL  LVLXL_VSS
  vss __builtin_vec_lvlxl (signed long long, signed short *);
    LVLXL  LVLXL_SS
  vus __builtin_vec_lvlxl (signed long long, vus *);
    LVLXL  LVLXL_VUS
  vus __builtin_vec_lvlxl (signed long long, unsigned short *);
    LVLXL  LVLXL_US
  vp __builtin_vec_lvlxl (signed long long, vp *);
    LVLXL  LVLXL_VP
  vbi __builtin_vec_lvlxl (signed long long, vbi *);
    LVLXL  LVLXL_VBI
  vsi __builtin_vec_lvlxl (signed long long, vsi *);
    LVLXL  LVLXL_VSI
  vsi __builtin_vec_lvlxl (signed long long, signed int *);
    LVLXL  LVLXL_SI
  vui __builtin_vec_lvlxl (signed long long, vui *);
    LVLXL  LVLXL_VUI
  vui __builtin_vec_lvlxl (signed long long, unsigned int *);
    LVLXL  LVLXL_UI
  vf __builtin_vec_lvlxl (signed long long, vf *);
    LVLXL  LVLXL_VF
  vf __builtin_vec_lvlxl (signed long long, float *);
    LVLXL  LVLXL_F

[VEC_LVRX, vec_lvrx, __builtin_vec_lvrx]
  vbc __builtin_vec_lvrx (signed long long, vbc *);
    LVRX  LVRX_VBC
  vsc __builtin_vec_lvrx (signed long long, vsc *);
    LVRX  LVRX_VSC
  vsc __builtin_vec_lvrx (signed long long, signed char *);
    LVRX  LVRX_SC
  vuc __builtin_vec_lvrx (signed long long, vuc *);
    LVRX  LVRX_VUC
  vuc __builtin_vec_lvrx (signed long long, unsigned char *);
    LVRX  LVRX_UC
  vbs __builtin_vec_lvrx (signed long long, vbs *);
    LVRX  LVRX_VBS
  vss __builtin_vec_lvrx (signed long long, vss *);
    LVRX  LVRX_VSS
  vss __builtin_vec_lvrx (signed long long, signed short *);
    LVRX  LVRX_SS
  vus __builtin_vec_lvrx (signed long long, vus *);
    LVRX  LVRX_VUS
  vus __builtin_vec_lvrx (signed long long, unsigned short *);
    LVRX  LVRX_US
  vp __builtin_vec_lvrx (signed long long, vp *);
    LVRX  LVRX_VP
  vbi __builtin_vec_lvrx (signed long long, vbi *);
    LVRX  LVRX_VBI
  vsi __builtin_vec_lvrx (signed long long, vsi *);
    LVRX  LVRX_VSI
  vsi __builtin_vec_lvrx (signed long long, signed int *);
    LVRX  LVRX_SI
  vui __builtin_vec_lvrx (signed long long, vui *);
    LVRX  LVRX_VUI
  vui __builtin_vec_lvrx (signed long long, unsigned int *);
    LVRX  LVRX_UI
  vf __builtin_vec_lvrx (signed long long, vf *);
    LVRX  LVRX_VF
  vf __builtin_vec_lvrx (signed long long, float *);
    LVRX  LVRX_F

[VEC_LVRXL, vec_lvrxl, __builtin_vec_lvrxl]
  vbc __builtin_vec_lvrxl (signed long long, vbc *);
    LVRXL  LVRXL_VBC
  vsc __builtin_vec_lvrxl (signed long long, vsc *);
    LVRXL  LVRXL_VSC
  vsc __builtin_vec_lvrxl (signed long long, signed char *);
    LVRXL  LVRXL_SC
  vuc __builtin_vec_lvrxl (signed long long, vuc *);
    LVRXL  LVRXL_VUC
  vuc __builtin_vec_lvrxl (signed long long, unsigned char *);
    LVRXL  LVRXL_UC
  vbs __builtin_vec_lvrxl (signed long long, vbs *);
    LVRXL  LVRXL_VBS
  vss __builtin_vec_lvrxl (signed long long, vss *);
    LVRXL  LVRXL_VSS
  vss __builtin_vec_lvrxl (signed long long, signed short *);
    LVRXL  LVRXL_SS
  vus __builtin_vec_lvrxl (signed long long, vus *);
    LVRXL  LVRXL_VUS
  vus __builtin_vec_lvrxl (signed long long, unsigned short *);
    LVRXL  LVRXL_US
  vp __builtin_vec_lvrxl (signed long long, vp *);
    LVRXL  LVRXL_VP
  vbi __builtin_vec_lvrxl (signed long long, vbi *);
    LVRXL  LVRXL_VBI
  vsi __builtin_vec_lvrxl (signed long long, vsi *);
    LVRXL  LVRXL_VSI
  vsi __builtin_vec_lvrxl (signed long long, signed int *);
    LVRXL  LVRXL_SI
  vui __builtin_vec_lvrxl (signed long long, vui *);
    LVRXL  LVRXL_VUI
  vui __builtin_vec_lvrxl (signed long long, unsigned int *);
    LVRXL  LVRXL_UI
  vf __builtin_vec_lvrxl (signed long long, vf *);
    LVRXL  LVRXL_VF
  vf __builtin_vec_lvrxl (signed long long, float *);
    LVRXL  LVRXL_F

[VEC_LVSL, vec_lvsl, __builtin_vec_lvsl]
  vuc __builtin_vec_lvsl (signed long long, unsigned char *);
    LVSL  LVSL_UC
  vuc __builtin_vec_lvsl (signed long long, signed char *);
    LVSL  LVSL_SC

[VEC_LVSR, vec_lvsr, __builtin_vec_lvsr]
  vuc __builtin_vec_lvsr (signed long long, unsigned char *);
    LVSR  LVSR_UC
  vuc __builtin_vec_lvsr (signed long long, signed char *);
    LVSR  LVSR_SC

[VEC_MAX, vec_max, __builtin_vec_max]
  vsc __builtin_vec_max (vsc, vsc);
    VMAXSB
  vuc __builtin_vec_max (vuc, vuc);
    VMAXUB
  vss __builtin_vec_max (vss, vss);
    VMAXSH
  vus __builtin_vec_max (vus, vus);
    VMAXUH
  vsi __builtin_vec_max (vsi, vsi);
    VMAXSW
  vui __builtin_vec_max (vui, vui);
    VMAXUW
  vsll __builtin_vec_max (vsll, vsll);
    VMAXSD
  vull __builtin_vec_max (vull, vull);
    VMAXUD
  vf __builtin_vec_max (vf, vf);
    XVMAXSP
  vd __builtin_vec_max (vd, vd);
    XVMAXDP

[VEC_MERGEH, vec_mergeh, __builtin_vec_mergeh]
  vbc __builtin_vec_mergeh (vbc, vbc);
    VMRGHB  VMRGHB_VBC
  vsc __builtin_vec_mergeh (vsc, vsc);
    VMRGHB  VMRGHB_VSC
  vuc __builtin_vec_mergeh (vuc, vuc);
    VMRGHB  VMRGHB_VUC
  vbs __builtin_vec_mergeh (vbs, vbs);
    VMRGHH  VMRGHH_VBS
  vss __builtin_vec_mergeh (vss, vss);
    VMRGHH  VMRGHH_VSS
  vus __builtin_vec_mergeh (vus, vus);
    VMRGHH  VMRGHH_VUS
  vp __builtin_vec_mergeh (vp, vp);
    VMRGHH  VMRGHH_VP
  vbi __builtin_vec_mergeh (vbi, vbi);
    VMRGHW  VMRGHW_VBI
  vsi __builtin_vec_mergeh (vsi, vsi);
    VMRGHW  VMRGHW_VSI
  vui __builtin_vec_mergeh (vui, vui);
    VMRGHW  VMRGHW_VUI
  vbll __builtin_vec_mergeh (vbll, vbll);
    VEC_MERGEH_V2DI  VEC_MERGEH_VBLL
  vsll __builtin_vec_mergeh (vsll, vsll);
    VEC_MERGEH_V2DI  VEC_MERGEH_VSLL
  vull __builtin_vec_mergeh (vull, vull);
    VEC_MERGEH_V2DI  VEC_MERGEH_VULL
  vf __builtin_vec_mergeh (vf, vf);
    VMRGHW  VMRGHW_VF
  vd __builtin_vec_mergeh (vd, vd);
    VEC_MERGEH_V2DF

[VEC_MERGEL, vec_mergel, __builtin_vec_mergel]
  vbc __builtin_vec_mergel (vbc, vbc);
    VMRGLB  VMRGLB_VBC
  vsc __builtin_vec_mergel (vsc, vsc);
    VMRGLB  VMRGLB_VSC
  vuc __builtin_vec_mergel (vuc, vuc);
    VMRGLB  VMRGLB_VUC
  vbs __builtin_vec_mergel (vbs, vbs);
    VMRGLH  VMRGLH_VBS
  vss __builtin_vec_mergel (vss, vss);
    VMRGLH  VMRGLH_VSS
  vus __builtin_vec_mergel (vus, vus);
    VMRGLH  VMRGLH_VUS
  vp __builtin_vec_mergel (vp, vp);
    VMRGLH  VMRGLH_VP
  vbi __builtin_vec_mergel (vbi, vbi);
    VMRGLW  VMRGLW_VBI
  vsi __builtin_vec_mergel (vsi, vsi);
    VMRGLW  VMRGLW_VSI
  vui __builtin_vec_mergel (vui, vui);
    VMRGLW  VMRGLW_VUI
  vbll __builtin_vec_mergel (vbll, vbll);
    VEC_MERGEL_V2DI  VEC_MERGEL_VBLL
  vsll __builtin_vec_mergel (vsll, vsll);
    VEC_MERGEL_V2DI  VEC_MERGEL_VSLL
  vull __builtin_vec_mergel (vull, vull);
    VEC_MERGEL_V2DI  VEC_MERGEL_VULL
  vf __builtin_vec_mergel (vf, vf);
    VMRGLW  VMRGLW_VF
  vd __builtin_vec_mergel (vd, vd);
    VEC_MERGEL_V2DF

[VEC_MIN, vec_min, __builtin_vec_min]
  vsc __builtin_vec_min (vsc, vsc);
    VMINSB
  vuc __builtin_vec_min (vuc, vuc);
    VMINUB
  vss __builtin_vec_min (vss, vss);
    VMINSH
  vus __builtin_vec_min (vus, vus);
    VMINUH
  vsi __builtin_vec_min (vsi, vsi);
    VMINSW
  vui __builtin_vec_min (vui, vui);
    VMINUW
  vsll __builtin_vec_min (vsll, vsll);
    VMINSD
  vull __builtin_vec_min (vull, vull);
    VMINUD
  vf __builtin_vec_min (vf, vf);
    XVMINSP
  vd __builtin_vec_min (vd, vd);
    XVMINDP

[VEC_MTVSCR, vec_mtvscr, __builtin_vec_mtvscr]
  void __builtin_vec_mtvscr (vbc);
    MTVSCR  MTVSCR_VBC
  void __builtin_vec_mtvscr (vsc);
    MTVSCR  MTVSCR_VSC
  void __builtin_vec_mtvscr (vuc);
    MTVSCR  MTVSCR_VUC
  void __builtin_vec_mtvscr (vbs);
    MTVSCR  MTVSCR_VBS
  void __builtin_vec_mtvscr (vss);
    MTVSCR  MTVSCR_VSS
  void __builtin_vec_mtvscr (vus);
    MTVSCR  MTVSCR_VUS
  void __builtin_vec_mtvscr (vp);
    MTVSCR  MTVSCR_VP
  void __builtin_vec_mtvscr (vbi);
    MTVSCR  MTVSCR_VBI
  void __builtin_vec_mtvscr (vsi);
    MTVSCR  MTVSCR_VSI
  void __builtin_vec_mtvscr (vui);
    MTVSCR  MTVSCR_VUI

[VEC_MULE, vec_mule, __builtin_vec_mule]
  vss __builtin_vec_mule (vsc, vsc);
    VMULESB
  vus __builtin_vec_mule (vuc, vuc);
    VMULEUB
  vsi __builtin_vec_mule (vss, vss);
    VMULESH
  vui __builtin_vec_mule (vus, vus);
    VMULEUH
  vsll __builtin_vec_mule (vsi, vsi);
    VMULESW
  vull __builtin_vec_mule (vui, vui);
    VMULEUW

[VEC_MULO, vec_mulo, __builtin_vec_mulo]
  vss __builtin_vec_mulo (vsc, vsc);
    VMULOSB
  vus __builtin_vec_mulo (vuc, vuc);
    VMULOUB
  vsi __builtin_vec_mulo (vss, vss);
    VMULOSH
  vui __builtin_vec_mulo (vus, vus);
    VMULOUH
  vsll __builtin_vec_mulo (vsi, vsi);
    VMULOSW
  vull __builtin_vec_mulo (vui, vui);
    VMULOUW

[VEC_NABS, vec_nabs, __builtin_vec_nabs]
  vsc __builtin_vec_nabs (vsc);
    NABS_V16QI
  vss __builtin_vec_nabs (vss);
    NABS_V8HI
  vsi __builtin_vec_nabs (vsi);
    NABS_V4SI
  vsll __builtin_vec_nabs (vsll);
    NABS_V2DI
  vf __builtin_vec_nabs (vf);
    NABS_V4SF
  vd __builtin_vec_nabs (vd);
    NABS_V2DF

[VEC_NEARBYINT, vec_nearbyint, __builtin_vec_nearbyint]
  vf __builtin_vec_nearbyint (vf);
    XVRSPI  XVRSPI_NBI
  vd __builtin_vec_nearbyint (vd);
    XVRDPI  XVRDPI_NBI

[VEC_NEG, vec_neg, __builtin_vec_neg]
  vsc __builtin_vec_neg (vsc);
    NEG_V16QI
  vss __builtin_vec_neg (vss);
    NEG_V8HI
  vsi __builtin_vec_neg (vsi);
    NEG_V4SI
  vsll __builtin_vec_neg (vsll);
    NEG_V2DI
  vf __builtin_vec_neg (vf);
    NEG_V4SF
  vd __builtin_vec_neg (vd);
    NEG_V2DF

[VEC_NOR, vec_nor, __builtin_vec_nor]
  vsc __builtin_vec_nor (vsc, vsc);
    VNOR_V16QI
  vuc __builtin_vec_nor (vuc, vuc);
    VNOR_V16QI_UNS  VNOR_V16QI_U
  vbc __builtin_vec_nor (vbc, vbc);
    VNOR_V16QI_UNS  VNOR_V16QI_B
  vss __builtin_vec_nor (vss, vss);
    VNOR_V8HI
  vus __builtin_vec_nor (vus, vus);
    VNOR_V8HI_UNS  VNOR_V8HI_U
  vbs __builtin_vec_nor (vbs, vbs);
    VNOR_V8HI_UNS  VNOR_V8HI_B
  vsi __builtin_vec_nor (vsi, vsi);
    VNOR_V4SI
  vui __builtin_vec_nor (vui, vui);
    VNOR_V4SI_UNS  VNOR_V4SI_U
  vbi __builtin_vec_nor (vbi, vbi);
    VNOR_V4SI_UNS  VNOR_V4SI_B
  vsll __builtin_vec_nor (vsll, vsll);
    VNOR_V2DI
  vull __builtin_vec_nor (vull, vull);
    VNOR_V2DI_UNS  VNOR_V2DI_U
  vbll __builtin_vec_nor (vbll, vbll);
    VNOR_V2DI_UNS  VNOR_V2DI_B
  vf __builtin_vec_nor (vf, vf);
    VNOR_V4SF
  vd __builtin_vec_nor (vd, vd);
    VNOR_V2DF

[VEC_OR, vec_or, __builtin_vec_or]
  vsc __builtin_vec_or (vsc, vsc);
    VOR_V16QI
  vuc __builtin_vec_or (vuc, vuc);
    VOR_V16QI_UNS  VOR_V16QI_U
  vbc __builtin_vec_or (vbc, vbc);
    VOR_V16QI_UNS  VOR_V16QI_B
  vss __builtin_vec_or (vss, vss);
    VOR_V8HI
  vus __builtin_vec_or (vus, vus);
    VOR_V8HI_UNS  VOR_V8HI_U
  vbs __builtin_vec_or (vbs, vbs);
    VOR_V8HI_UNS  VOR_V8HI_B
  vsi __builtin_vec_or (vsi, vsi);
    VOR_V4SI
  vui __builtin_vec_or (vui, vui);
    VOR_V4SI_UNS  VOR_V4SI_U
  vbi __builtin_vec_or (vbi, vbi);
    VOR_V4SI_UNS  VOR_V4SI_B
  vsll __builtin_vec_or (vsll, vsll);
    VOR_V2DI
  vull __builtin_vec_or (vull, vull);
    VOR_V2DI_UNS  VOR_V2DI_U
  vbll __builtin_vec_or (vbll, vbll);
    VOR_V2DI_UNS  VOR_V2DI_B
  vf __builtin_vec_or (vf, vf);
    VOR_V4SF
  vd __builtin_vec_or (vd, vd);
    VOR_V2DF

[VEC_PACK, vec_pack, __builtin_vec_pack]
  vsc __builtin_vec_pack (vss, vss);
    VPKUHUM  VPKUHUM_VSS
  vuc __builtin_vec_pack (vus, vus);
    VPKUHUM  VPKUHUM_VUS
  vbc __builtin_vec_pack (vbs, vbs);
    VPKUHUM  VPKUHUM_VBS
  vss __builtin_vec_pack (vsi, vsi);
    VPKUWUM  VPKUWUM_VSI
  vus __builtin_vec_pack (vui, vui);
    VPKUWUM  VPKUWUM_VUI
  vbs __builtin_vec_pack (vbi, vbi);
    VPKUWUM  VPKUWUM_VBI
  vsi __builtin_vec_pack (vsll, vsll);
    VPKUDUM  VPKUDUM_VSLL
  vui __builtin_vec_pack (vull, vull);
    VPKUDUM  VPKUDUM_VULL
  vbi __builtin_vec_pack (vbll, vbll);
    VPKUDUM  VPKUDUM_VBLL
  vf __builtin_vec_pack (vd, vd);
    FLOAT2_V2DF FLOAT2_V2DF_PACK

[VEC_PACKPX, vec_packpx, __builtin_vec_packpx]
  vp __builtin_vec_packpx (vui, vui);
    VPKPX

[VEC_PACKS, vec_packs, __builtin_vec_packs]
  vuc __builtin_vec_packs (vus, vus);
    VPKUHUS
  vsc __builtin_vec_packs (vss, vss);
    VPKSHSS
  vus __builtin_vec_packs (vui, vui);
    VPKUWUS
  vss __builtin_vec_packs (vsi, vsi);
    VPKSWSS
  vui __builtin_vec_packs (vull, vull);
    VPKUDUS
  vsi __builtin_vec_packs (vsll, vsll);
    VPKSDSS

[VEC_RE, vec_re, __builtin_vec_re]
  vf __builtin_vec_re (vf);
    XVRESP
  vd __builtin_vec_re (vd);
    XVREDP

[VEC_RECIP, vec_recipdiv, __builtin_vec_recipdiv]
  vf __builtin_vec_recipdiv (vf, vf);
    RECIP_V4SF
  vd __builtin_vec_recipdiv (vd, vd);
    RECIP_V2DF

[VEC_RINT, vec_rint, __builtin_vec_rint]
  vf __builtin_vec_rint (vf);
    XVRSPIC
  vd __builtin_vec_rint (vd);
    XVRDPIC

[VEC_RL, vec_rl, __builtin_vec_rl]
  vsc __builtin_vec_rl (vsc, vuc);
    VRLB  VRLB_VSC
  vuc __builtin_vec_rl (vuc, vuc);
    VRLB  VRLB_VUC
  vss __builtin_vec_rl (vss, vus);
    VRLH  VRLH_VSS
  vus __builtin_vec_rl (vus, vus);
    VRLH  VRLH_VUS
  vsi __builtin_vec_rl (vsi, vui);
    VRLW  VRLW_VSI
  vui __builtin_vec_rl (vui, vui);
    VRLW  VRLW_VUI
  vsll __builtin_vec_rl (vsll, vull);
    VRLD  VRLD_VSLL
  vull __builtin_vec_rl (vull, vull);
    VRLD  VRLD_VULL

[VEC_RLMI, vec_rlmi, __builtin_vec_rlmi]
  vui __builtin_vec_rlmi (vui, vui, vui);
    VRLWMI
  vull __builtin_vec_rlmi (vull, vull, vull);
    VRLDMI

[VEC_RLNM, vec_rlnm, __builtin_vec_rlnm]
  vui __builtin_vec_rlnm (vui, vui);
    VRLWNM
  vull __builtin_vec_rlnm (vull, vull);
    VRLDNM

[VEC_ROUND, vec_round, __builtin_vec_round]
  vf __builtin_vec_round (vf);
    XVRSPI
  vd __builtin_vec_round (vd);
    XVRDPI

[VEC_RSQRT, vec_rsqrt, __builtin_vec_rsqrt]
  vf __builtin_vec_rsqrt (vf);
    RSQRT_4SF
  vd __builtin_vec_rsqrt (vd);
    RSQRT_2DF

[VEC_RSQRTE, vec_rsqrte, __builtin_vec_rsqrte]
  vf __builtin_vec_rsqrte (vf);
    XVRSQRTESP
  vd __builtin_vec_rsqrte (vd);
    XVRSQRTEDP

[VEC_SL, vec_sl, __builtin_vec_sl]
  vsc __builtin_vec_sl (vsc, vuc);
    VSLB  VSLB_VSC
  vuc __builtin_vec_sl (vuc, vuc);
    VSLB  VSLB_VUC
  vss __builtin_vec_sl (vss, vus);
    VSLH  VSLH_VSS
  vus __builtin_vec_sl (vus, vus);
    VSLH  VSLH_VUS
  vsi __builtin_vec_sl (vsi, vui);
    VSLW  VSLW_VSI
  vui __builtin_vec_sl (vui, vui);
    VSLW  VSLW_VUI
  vsll __builtin_vec_sl (vsll, vull);
    VSLD  VSLD_VSLL
  vull __builtin_vec_sl (vull, vull);
    VSLD  VSLD_VULL

[VEC_SLL, vec_sll, __builtin_vec_sll]
  vsc __builtin_vec_sll (vsc, vuc);
    VSL  VSL_VSC
  vuc __builtin_vec_sll (vuc, vuc);
    VSL  VSL_VUC
  vss __builtin_vec_sll (vss, vuc);
    VSL  VSL_VSS
  vus __builtin_vec_sll (vus, vuc);
    VSL  VSL_VUS
  vp __builtin_vec_sll (vp, vuc);
    VSL  VSL_VP
  vsi __builtin_vec_sll (vsi, vuc);
    VSL  VSL_VSI
  vui __builtin_vec_sll (vui, vuc);
    VSL  VSL_VUI
  vsll __builtin_vec_sll (vsll, vuc);
    VSL  VSL_VSLL
  vull __builtin_vec_sll (vull, vuc);
    VSL  VSL_VULL

[VEC_SQRT, vec_sqrt, __builtin_vec_sqrt]
  vf __builtin_vec_sqrt (vf);
    XVSQRTSP
  vd __builtin_vec_sqrt (vd);
    XVSQRTDP

[VEC_TRUNC, vec_trunc, __builtin_vec_trunc]
  vf __builtin_vec_trunc (vf);
    XVRSPIZ
  vd __builtin_vec_trunc (vd);
    XVRDPIZ

[VEC_UNPACKH, vec_unpackh, __builtin_vec_unpackh]
  vss __builtin_vec_unpackh (vsc);
    VUPKHSB  VUPKHSB_VSC
  vbs __builtin_vec_unpackh (vbc);
    VUPKHSB  VUPKHSB_VBC
  vsi __builtin_vec_unpackh (vss);
    VUPKHSH  VUPKHSH_VSS
  vbi __builtin_vec_unpackh (vbs);
    VUPKHSH  VUPKHSH_VBS
  vui __builtin_vec_unpackh (vp);
    VUPKHPX
  vsll __builtin_vec_unpackh (vsi);
    VUPKHSW  VUPKHSW_VSI
  vbll __builtin_vec_unpackh (vbi);
    VUPKHSW  VUPKHSW_VBI
  vd __builtin_vec_unpackh (vf);
    DOUBLEH_V4SF VUPKHF

[VEC_UNPACKL, vec_unpackl, __builtin_vec_unpackl]
  vss __builtin_vec_unpackl (vsc);
    VUPKLSB  VUPKLSB_VSC
  vbs __builtin_vec_unpackl (vbc);
    VUPKLSB  VUPKLSB_VBC
  vsi __builtin_vec_unpackl (vss);
    VUPKLSH  VUPKLSH_VSS
  vbi __builtin_vec_unpackl (vbs);
    VUPKLSH  VUPKLSH_VBS
  vui __builtin_vec_unpackl (vp);
    VUPKLPX
  vsll __builtin_vec_unpackl (vsi);
    VUPKLSW  VUPKLSW_VSI
  vbll __builtin_vec_unpackl (vbi);
    VUPKLSW  VUPKLSW_VBI
  vd __builtin_vec_unpackl (vf);
    DOUBLEL_V4SF VUPKLF
